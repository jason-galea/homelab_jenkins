x-jenkins-linux-node: &jenkins_linux_node_anchor
  remoteFS: "/home/jenkins"
  launcher:
    inbound:
      workDirSettings:
        disabled: true
        failIfWorkDirIsMissing: false
        internalDir: "remoting"
        workDirPath: "/tmp"

jenkins:
  numExecutors: 0 ### Disable built-in node
  nodes:
    - permanent:
        name: "static-agent1"
        <<: *jenkins_linux_node_anchor
    - permanent:
        name: "static-agent2"
        <<: *jenkins_linux_node_anchor
  clouds:
    - docker:
        # containerCap: 10
        dockerApi:
          # connectTimeout: 60
          dockerHost:
            uri: "tcp://jenkins-docker:2376"
          # readTimeout: 60
        # exposeDockerHost: true
        # name: "docker"
        templates:
          - name: "docker_agent"
            labelString: "docker_agent"
            connector: "attach"
            dockerTemplateBase:
              # cpuPeriod: 0
              # cpuQuota: 0
              image: "jenkins/agent"
              mounts:
                - "type=tmpfs,destination=/run"
                # - "type=bind,source=/var/run/docker.sock,destination=/var/run/docker.sock"
                # - "type=volume,src=hello,dst=/world"
              environmentsString: |
                hello=world
                foo=bar
                DOCKER_TLS_CERTDIR=""
            # pullStrategy: PULL_ALWAYS
            # pullTimeout: 300
            remoteFs: "/home/jenkins/agent/"
            instanceCapStr: "10"


jobs:
  - script: >
      multibranchPipelineJob('image-jenkins') {
        branchSources {
          github {
            // The id option in the Git and GitHub branch source contexts is now mandatory (JENKINS-43693).
            id('12312313') // IMPORTANT: use a constant and unique identifier
            // scanCredentialsId('github')
            repoOwner('jason-galea')
            repository('homelab_jenkins')
            // apiUri('http://my-github-server/api/v3') // Optional, needed for private github enterprise servers
          }
        }
        orphanedItemStrategy {
          discardOldItems {
            numToKeep(1)
          }
        }
        triggers {
          periodic(5)
        }
      }
